# mongod.conf

# Reference
## http://docs.mongodb.org/manual/reference/configuration-options/

storage:
  dbPath: /var/lib/mongodb
  directoryPerDB: true
  journal:
    enabled: true

systemLog:
  path: /var/log/mongodb/mongod.log
  destination: file
  logAppend: true

processManagement:
  timeZoneInfo: /usr/share/zoneinfo
  pid: /var/run/mongodb/mongod.pid

net:
  port: 27017
  bindIp: 127.0.0.1

# Audit all operation
setParameter: 
  auditAuthorizationSuccess: true

# Congigure /etc/syslog.conf
# auditLog:
#    destination: syslog

auditLog:
  destination: file
  format: JSON
  path: /var/log/mongodb/mxauditLog.json
  
   # Audit opeartion:Authentication for User.Known
   #filter: '{ atype : "authenticate" }'

   # Audit opeartion createCollection() and dropCollection() upon any Db
   #filter: '{ atype: { $in: [ "createCollection", "dropCollection" ] } }'

   # Audit operation:Authentication upon db:test
   # { atype: "authenticate", "param.db": "test" }
   

   # Audit operation authentication User.Know and [authentication failures] for User.unknow
   # { $or: [ { users: [] }, { atype : "authenticate" } ] }
   
   # Audit operation: authentication User.myClusterAdministratorÂ¶
   # { atype: "authenticate", "param": { "user": "myClusterAdministrator", "db": "admin", "mechanism": "SCRAM-SHA-1" } }

   # Audit operation: createCollection() & dropCollection() upon db:test
   # { atype: { $in: [ "createCollection", "dropCollection" ] }, "param.ns": /^test\\./ } }

   # Audits opeartion made by User Granted role:readWrite & User Inherited role:readWrite upon Db:test
   # { roles: { role: "readWrite", db: "test" } }

   # Audit operation: find(), insert(), remove(), update(), save(), findAndModify()
   # { atype: "authCheck", "param.command": { $in: [ "find", "insert", "delete", "update", "findandmodify" ] } }

#  engine:
#  mmapv1:
#  wiredTiger:

# where to write logging data.

# network interfaces


# how the process runs

#security:

#operationProfiling:

#replication:

#sharding:

## Enterprise-Only Options:

#auditLog:

#snmp:


{ "$or": [ { "users": [] }, { "atype": "authenticate" } ] }